#!/usr/bin/env node

/**
 * Module dependencies.
 */

const createApp = require('../app');
const http = require('http');
require('dotenv').config();

const mongoose = require('mongoose');


mongoose.connect(process.env.DB_CONNECTIONS, {useNewUrlParser: true})
    .then((val)=> {
      const db = mongoose.connection,
        app = createApp(db);

      db.once('open', function (error) {
        if (error) {
          console.log('Error with db connection!!!');
          return;
        }
        console.log('Connection established!!!');
      });

      db.on('error', function (err) {
        console.log(err);
      });

      /**
       * Get port from environment and store in Express.
       */

      var port = process.env.PORT || '3001';

      /**
       * Create HTTP server.
       */

      server = http.createServer(app);

      /**
       * Listen on provided port, on all network interfaces.
       */

      server.listen(port);
      server.on('error', onError);


        function onError(error) {
            if (error.syscall !== 'listen') {
                throw error;
            }

            var bind = typeof port === 'string'
                ? 'Pipe ' + port
                : 'Port ' + port;

            // handle specific listen errors with friendly messages
            switch (error.code) {
                case 'EACCES':
                    console.error(bind + ' requires elevated privileges');
                    process.exit(1);
                    break;
                case 'EADDRINUSE':
                    console.error(bind + ' is already in use');
                    process.exit(1);
                    break;
                default:
                    throw error;
            }
        }

    }).catch((err) => {
      console.log(err);
    }
);

/**
 * Event listener for HTTP server "error" event.
 */





